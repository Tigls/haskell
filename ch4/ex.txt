1. length :: [a] -> Int
2. 1) 5
   2) 3
   3) 10
   4) 2
   5) 5
3. Cause length is type Int and not an instance of typeclass Fractional
4. div 6 (length [1 ,2 , 3])
5. True :: Bool
6. False :: Bool
7. 1) True
   2) length [1, 'a', 3, 'b'] - must be the same type
   3) 5
   4) False
   5) Error, 9 not :: Bool
8.isPalindrome x = x == reverse x
9. myAbs x = if x < 0 then x * (-1) else x
10. f (x,y) = ((snd x, snd y), (fst x, fst y))

Syntax
1.c
2.b
3.a
4.d
